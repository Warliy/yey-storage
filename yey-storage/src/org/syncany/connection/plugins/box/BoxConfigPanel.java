/*
 * Syncany, www.syncany.org
 * Copyright (C) 2011 Philipp C. Heckel <philipp.heckel@gmail.com> 
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.syncany.connection.plugins.box;

import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.syncany.connection.plugins.ConfigPanel;
import org.syncany.connection.plugins.TransferManager;
import org.syncany.exceptions.StorageConnectException;
import org.syncany.util.FileUtil;

import cn.com.believer.songyuanframework.openapi.storage.box.constant.BoxConstant;
import org.syncany.config.Config;

/**
 *
 * @author Philipp C. Heckel <philipp.heckel@gmail.com>
 */
public class BoxConfigPanel extends ConfigPanel {
	
	private ResourceBundle resourceBundle;

    /** Creates new form FtpConnectionPanel */
    public BoxConfigPanel(BoxConnection connection) {
        super(connection);
        resourceBundle = Config.getInstance().getResourceBundle();
        initComponents();
    }

    @Override
    public void load() {        
        txtFolderId.setText(getConnection().getFolderId());
        txtApiKey.setText(getConnection().getApiKey());
        txtTicket.setText(getConnection().getTicket());
        txtToken.setText(getConnection().getToken());
    }

    @Override
    public void save() {        
        getConnection().setFolderId(txtFolderId.getText());
        getConnection().setApiKey(txtApiKey.getText());
        getConnection().setTicket(txtTicket.getText());
        getConnection().setToken(txtToken.getText());
    }

    @Override
    public BoxConnection getConnection() {
        return (BoxConnection) super.getConnection();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtApiKey = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtToken = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTicket = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFolderId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText(resourceBundle.getString("box_not_supported"));
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel1.setText(resourceBundle.getString("box_api_key"));
        jLabel1.setName("jLabel1"); // NOI18N

        txtApiKey.setName("txtApiKey"); // NOI18N

        btnLogin.setText(resourceBundle.getString("box_login"));
        btnLogin.setName("btnLogin"); // NOI18N
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText(resourceBundle.getString("box_token"));
        jLabel2.setName("jLabel2"); // NOI18N

        txtToken.setName("txtToken"); // NOI18N

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText(resourceBundle.getString("box_no_auth_token"));
        jLabel8.setName("jLabel8"); // NOI18N

        txtTicket.setName("txtTicket"); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText(resourceBundle.getString("box_ticket"));
        jLabel3.setName("jLabel3"); // NOI18N

        txtFolderId.setName("txtFolderId"); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText(resourceBundle.getString("box_folder_id"));
        jLabel4.setName("jLabel4"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(txtApiKey, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtFolderId, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtToken, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                                    .addComponent(txtTicket, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFolderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtApiKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtToken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        if (txtApiKey.getText().isEmpty()) {
            getConnection().setApiKey("xxx"); // Box returns 'Wrong input' if API key is empty?!
        }
        else {
            getConnection().setApiKey(txtApiKey.getText());
        }

        if (txtTicket.getText().isEmpty()) {
           getConnection().setTicket(null);
        }
        else {
           getConnection().setTicket(txtTicket.getText());
        }        

        if (txtToken.getText().isEmpty()) {
           getConnection().setToken(null);
        }
        else {
           getConnection().setToken(txtToken.getText());
        }        

        TransferManager tm = getConnection().createTransferManager();

        try {
            tm.connect();            

            txtTicket.setText(getConnection().getTicket());
            txtToken.setText(getConnection().getToken());
        }
        catch (StorageConnectException ex) {
            Logger.getLogger(BoxConfigPanel.class.getName()).log(Level.SEVERE, null, ex);
            
            if (BoxConstant.STATUS_NOT_LOGGED_IN.equals(getConnection().getLoginStatus())) {
                txtTicket.setText(getConnection().getTicket());
                txtToken.setText(getConnection().getToken());
                
                FileUtil.browsePage("https://www.box.net/api/1.0/auth/"+getConnection().getTicket());
            }            
        }
    }//GEN-LAST:event_btnLoginActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtAccessKey;
    private javax.swing.JTextField txtAccessKey1;
    private javax.swing.JTextField txtAccessKey2;
    private javax.swing.JTextField txtApiKey;
    private javax.swing.JTextField txtFolderId;
    private javax.swing.JTextField txtTicket;
    private javax.swing.JTextField txtToken;
    // End of variables declaration//GEN-END:variables

}
